

-- --------------------------------------------------------------------------------------------------

Levantamento de requisitos

[ ] Interface Admin para cadastro de usuários que podem acessar determinado recurso
    [ ] Usar banco de dados MongoDB
        [ ] Habilitar autenticação no banco de dados MongoDB, pois pode ser que estar aplicacao estará
                na Internet (numvem)
        [ ] Levantar um Container Docker com MongoDB
            [ ] Dados do banco devem ser persistentes (em volume fora do container)
            [ ] Analisar como será possível fazer backup destes dados
                [ ] Vai ter que fazer backup offline? (parar o container e fazer backup frio?)
                [ ] Existe backup full online (quente) do MongoDB?
            [ ] Sugerir em documentação que deve-se fazer backup dos dados
    [ ] Permitir usuário admin poder cadastrar novos usuários
    Para o futuro: [ ] Acessar esta interface também via HTTPS://, portanto será necessário certificado
    [ ] o Log da aplicação (morgan?) deve ficar fora do container em um volume
        [ ] verificar se tem como deixar este round-robin
    [ ] verificar se será interessante ter um log do container conforme video abaixo
        https://www.youtube.com/watch?v=z4Vmpc1BOx0
        [ ] Este por padrão creio que já é round-robin, mas checar se sim
        [ ] checar se cada container tem o seu log? exemplo: API e BD, ou se estarão juntos

-- --------------------------------------------------------------------------------------------------

no Windows

continuar...

    Nao funcionou o make no Windows (eu até fiz um makefile)
        - Tentei Cygwin
        - Tentei baixar outros como GNUWin, mas, a maior parte está tudo fora do ar. A impressão que dá é que ninguem está usando mais estas soluções
            O que será que estão usando?
        - Tentei usar como Terminal do VSCode o WSL, sem sucesso
            E mesmo que conseguisse, dentro do WSL tb não encontrei o make

-- --------------------------------------------------------------------------------------------------

Fontes:

Segurança do banco de dados:
https://www.youtube.com/watch?v=SY_9zwb29LA&t=73s
[ MongoDB 4 ] Configuring authentication, users and roles in MongoDB
Configurando o banco de dados MongoDB para autenticação

https://www.youtube.com/watch?v=hP77Rua1E0c&t=90s
exemplo de interface simples de cadastro de usuarios acessando o mongodb
Node.js usando EJS para prover uma interface simples para cadastro de usuário

Ideias desta aplicação, retiradas de:
https://www.youtube.com/watch?v=z4Vmpc1BOx0

.env
make up
docker-compose
MongoDB
pm2
Node.js


-- --------------------------------------------------------------------------------------------------

Configurado o package.json com o seguinte os scripts:

"dev": "nodemon -- -r dotenv/config app.js",
"start": "pm2 node app.js --name dev-frontend-api-admin --watch --no-dameon"

-- --------------------------------------------------------------------------------------------------

Docker

// Subindo um container com o MongoDB para este projeto
docker container run -d -p 27017:27017 -v c:\Jeter\mongodb-dados --name mongo mongo:latest

// Conectando ao container
docker container exec -it mongo bash

// Conectando ao banco de dados
mongo

// Verificando os bancos de dados existentes
show dbs


// Subindo o container, usando Makefile para carregar variáveis de ambiente e chamar docker-compose
make up

// Verificando os logs gerados pelo container
make logs

-- --------------------------------------------------------------------------------------------------

Problema
[MONGODB DRIVER] Warning: Current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. 
To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.

Causa
1 - Falta adicionar { useUnifiedTopology: true } na string de conexao
2 - Você adicionou { useUnifiedTopology: true } à string de conexao, mas o erro persiste, pode ser que você adicionou de forma errada. 
Isso não pode ser adicionado em objeto separado e de preferência deve ser antes de qualquer outra operação

CUIDADO: mesmo que você ja adicionou { useUnifiedTopology: true } à sua string de conexao e o problema ainda persiste

Solucao
Adicionar { useUnifiedTopology: true } á string de conexão, e tem que ser desta forma, onde ele fica primeiro e dentro do mesmo objeto:
{ useUnifiedTopology: true, useNewUrlParser: true }

-- --------------------------------------------------------------------------------------------------

Problema
Ao executar
make up
no MacBook apresenta a mensagem:

ERROR: The Compose file './docker-compose.yml' is invalid because:
services.db.ports contains an invalid type, it should be a number, or an object
make: *** [up] Error 1

Causa

Apesar do problema parecer ser algo incorreto que definimos no arquivo docker-compose.yml, pode ser que a
    causa na verdade, seja porque nao definimos antes uma variavel que será substituida ali no arquivo
    docker-compose.yml
Neste caso por exemplo, o problema era na linha - ${DB_PORT}:27017

services:
    db:
        image: mongo:latest
        container_name: db
        restart: always
        ports:
            - ${DB_PORT}:27017

porem a variável não tinha sido anteriormente definida nem no ambiente e nem no arquivo .env
ao executar então o: make up, ele não encontrava esta variável para substituir o DB_PORT

Solucao

Definir antes a variavel DB_PORT no arquivo .env

-- --------------------------------------------------------------------------------------------------

Docker compose para ambiente produção

version: "3.2"
services:
    db:
        image: mongo:latest
        container_name: db
        restart: always
        ports:
            - ${DB_PORT}:27017
        environment: 
            MONGO_INITDB_DATABASE: ${DB_NAME}
            MONGO_INITDB_USERNAME: ${DB_USER}
            MONGO_INITDB_PASSWORD: ${DB_PASS}
    nodeauth: 
        image: jetercosta/authadmin_mongo
        container_name: authadmin_mongo
        restart: always
        depends_on: 
            - db
        ports:
            - ${HTTP_PORT}:${HTTP_PORT}
